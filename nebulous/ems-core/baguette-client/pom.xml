<!--
  ~ Copyright (C) 2017-2023 Institute of Communication and Computer Systems (imu.iccs.gr)
  ~
  ~ This Source Code Form is subject to the terms of the Mozilla Public License, v2.0, unless
  ~ Esper library is used, in which case it is subject to the terms of General Public License v2.0.
  ~ If a copy of the MPL was not distributed with this file, you can obtain one at
  ~ https://www.mozilla.org/en-US/MPL/2.0/
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gr.iccs.imu.ems</groupId>
        <artifactId>ems-core</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>baguette-client</artifactId>
	<name>EMS - Baguette Client</name>

	<properties>
		<atomix.version>3.1.12</atomix.version>

		<!-- io.fabricat8 docker-maven-plugin properties -->
		<docker-maven-plugin.version>0.43.2</docker-maven-plugin.version>
		<docker.image.name>ems-client</docker.image.name>
		<docker.user>emsuser</docker.user>
		<docker.user.home>/opt/baguette-client</docker.user.home>
	</properties>

	<dependencies>
		<dependency>
			<groupId>gr.iccs.imu.ems</groupId>
			<artifactId>broker-cep</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>gr.iccs.imu.ems</groupId>
			<artifactId>broker-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>gr.iccs.imu.ems</groupId>
			<artifactId>common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Spring-Boot dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.starter.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.sshd/apache-sshd -->
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>apache-sshd</artifactId>
			<version>${apache-sshd.version}</version>
			<type>pom</type>
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.jgit</groupId>
					<artifactId>org.eclipse.jgit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>sshd-scp</artifactId>
			<version>${apache-sshd.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Atomix dependencies -->
		<dependency>
			<groupId>io.atomix</groupId>
			<artifactId>atomix</artifactId>
			<version>${atomix.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.atomix</groupId>
			<artifactId>atomix-raft</artifactId>
			<version>${atomix.version}</version>
		</dependency>
		<dependency>
			<groupId>io.atomix</groupId>
			<artifactId>atomix-primary-backup</artifactId>
			<version>${atomix.version}</version>
		</dependency>
		<dependency>
			<groupId>io.atomix</groupId>
			<artifactId>atomix-gossip</artifactId>
			<version>${atomix.version}</version>
		</dependency>
		<dependency>
			<groupId>io.atomix</groupId>
			<artifactId>atomix-storage</artifactId>
			<version>${atomix.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>gr.iccs.imu.ems.baguette.client.BaguetteClient</mainClass>
					<executable>maven</executable>
				</configuration>
			</plugin>

			<!-- Assembly Maven plugin (https://maven.apache.org/plugin-developers/cookbook/generate-assembly.html) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/baguette-client-installation-package.xml</descriptor>
					</descriptors>
					<finalName>baguette-client</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev-local-docker-image-build</id>
			<activation>
				<file>
					<exists>../.dev-local-docker-image-build</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<!-- Read docker plugin settings from properties file -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.2.0</version>
						<executions>
							<execution>
								<id>read-docker-image-properties</id>
								<phase>validate</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<files>
								<file>../.dev-local-docker-image-build</file>
							</files>
							<outputFile/>
							<properties/>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>build-docker-image</id>
			<activation>
				<file><exists>.</exists></file>
			</activation>
			<build>
				<plugins>
					<!-- Set docker image properties -->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>set-docker-properties</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target unless="docker.image.tag">
										<property name="docker.image.tag" value="${project.version}"/>
										<property name="build.description" value=""/>
									</target>
								</configuration>
							</execution>
							<!--<execution>
								<id>print-docker-properties</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Print Docker image dev properties</echo>
                                        <echo>Image Tag: "${docker.image.tag}"</echo>
                                        <echo>Description: "${build.description}"</echo>
									</target>
								</configuration>
							</execution>-->
						</executions>
					</plugin>

					<!-- Build docker image using docker-context folder -->
					<!--<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven-plugin.version}</version>
						<configuration>
							<verbose>true</verbose>
							<useColor>true</useColor>
							<images>
								<image>
									<name>${docker.image.name}:${docker.image.tag}</name>
									<build>
										<dockerFile>${project.basedir}/Dockerfile</dockerFile>
										<args>
											<EMS_USER>${docker.user}</EMS_USER>
											<EMS_HOME>${docker.user.home}</EMS_HOME>
										</args>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker-image-build</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>-->

				</plugins>
			</build>
		</profile>
	</profiles>

</project>
